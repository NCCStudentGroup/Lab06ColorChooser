/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jcolorchooser;

import com.sun.xml.internal.ws.util.StringUtils;

/**
 *
 * @author alex.henkin
 */
public class ColorHexPanel extends javax.swing.JPanel implements ColorListener {

    /**
     * Creates new form ColorHexPanel
     */
    public ColorHexPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelHEX = new javax.swing.JLabel();
        jTextFieldHEX = new javax.swing.JTextField();

        setLayout(new java.awt.GridLayout(1, 2, 0, 10));

        jLabelHEX.setText("HEX");
        add(jLabelHEX);

        jTextFieldHEX.setEditable(false);
        jTextFieldHEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHEXActionPerformed(evt);
            }
        });
        add(jTextFieldHEX);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldHEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHEXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHEXActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelHEX;
    private javax.swing.JTextField jTextFieldHEX;
    // End of variables declaration//GEN-END:variables

    @Override
    public void changeColor(ColorEvent ce) {

        String hexRed = (Integer.toHexString(ce.getColor().getRed())).toUpperCase();
        String hexGreen = (Integer.toHexString(ce.getColor().getGreen())).toUpperCase();
        String hexBlue = (Integer.toHexString(ce.getColor().getBlue())).toUpperCase();
        
        // Tried StringUtil.leftPad(string, length, char) but it did not work - Apache lib. 
        // Could not find any other way to pad string or format hex number
        if (hexRed.length() == 1){
            hexRed = "0" + hexRed;
        }
        if (hexGreen.length() == 1){
            hexGreen = "0" + hexGreen;
        }
        if (hexBlue.length() == 1){
            hexBlue = "0" + hexBlue;
        }        

        jTextFieldHEX.setText("#" + hexRed + hexGreen +hexBlue);    }
}
